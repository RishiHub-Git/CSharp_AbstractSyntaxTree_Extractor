{
  "Namespaces": [
    {
      "Name": "Default NameSpace",
      "Classes": [
        {
          "Name": "ProgramFile",
          "Access_Modifier": "private",
          "Is_Class_Static": false,
          "XMLComment": "",
          "Comment": "",
          "Methods": [
            {
              "XMLComment": "",
              "Comment": "",
              "Name": "MainMethod",
              "Access_Modifier": "private",
              "Is_Method_Static": true,
              "Parameters": "string[] args",
              "ReturnType": "void",
              "Body": "{\r\n        // Path to the folder containing .cs files\r\n        string folderPath = @\"Path\\To\\Your\\Folder\";\r\n\r\n        // Check if the folder exists\r\n        if (!Directory.Exists(folderPath))\r\n        {\r\n            Console.WriteLine(\"The specified folder does not exist.\");\r\n            return;\r\n        }\r\n\r\n        // Get all .cs files in the folder (and subfolders)\r\n        var csFiles = Directory.GetFiles(folderPath, \"*.cs\", SearchOption.AllDirectories);\r\n\r\n        // Process each .cs file\r\n        foreach (var file in csFiles)\r\n        {\r\n            Console.WriteLine($\"Reading file: {file}\");\r\n\r\n            // Read the content of the .cs file\r\n            string content = File.ReadAllText(file);\r\n\r\n            // Output or process the content\r\n            Console.WriteLine($\"Content of {Path.GetFileName(file)}:\");\r\n            Console.WriteLine(content);\r\n            Console.WriteLine(new string('-', 80)); // Separator for readability\r\n        }\r\n    }"
            }
          ],
          "Constructors": [],
          "Fields": [],
          "Properties": []
        }
      ]
    }
  ]
}